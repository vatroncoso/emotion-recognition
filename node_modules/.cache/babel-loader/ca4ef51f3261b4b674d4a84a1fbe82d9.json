{"remainingRequest":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue","mtime":1637513856000},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\babel.config.js","mtime":1637240904000},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\babel-loader\\lib\\index.js","mtime":1639667166196},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js","mtime":1639667167063}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ParteTres',\n  data: function data() {\n    return {\n      message: \"hola mundo\",\n      arrayDelMal: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      varibleInput: \"\"\n    };\n  },\n  methods: {\n    agregarNumero: function agregarNumero() {\n      this.arrayDelMal.push(Math.floor(Math.random() * 11));\n    }\n  },\n  computed: {\n    upperMessage: function upperMessage() {\n      return this.message.toUpperCase();\n    },\n    arrayDelMalFiltrado: function arrayDelMalFiltrado() {\n      //No olvidar que esto funciona como una \"nueva\" varible no modifica nada de lo que se llama aca, en este caso arrayDelMal seguira tal cual\n      return this.arrayDelMal.filter(function (e) {\n        return e > 5;\n      });\n    }\n  },\n  watch: {\n    varibleInput: function varibleInput(val) {\n      console.log(\"call from watch:\", val);\n    }\n  },\n  filters: {\n    upper: function upper(val) {\n      return val.toUpperCase();\n    }\n  }\n};",{"version":3,"sources":["ParteTres.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,YADA;AAEA,MAAA,WAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAAA,GAHA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,EAAA,CAAA;AACA;AAHA,GATA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,OAAA,CAAA,WAAA,EAAA;AACA,KAHA;AAIA,IAAA,mBAJA,iCAIA;AACA;AACA,aAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AAAA,eAAA,CAAA,GAAA,CAAA;AAAA,OAAA,CAAA;AACA;AAPA,GAfA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,YADA,wBACA,GADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,GAAA;AACA;AAHA,GAzBA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA;AACA,aAAA,GAAA,CAAA,WAAA,EAAA;AACA;AAHA;AA/BA,CAAA","sourcesContent":["<template>\n    <v-container>\n        <v-row class=\"text-center\">\n            <v-col cols=\"12\">\n               <p class=\"display-1\"> Tercera parte </p>\n            </v-col>\n            <v-col cols=\"12\">\n               Aparte de methods existen otros tipo de (no se como llamarlos) muy interesantes como el computed, que basicamente se calcula cada vez que hay un cambio en una variable, ejemplo:\n            </v-col>\n            <v-col cols=\"12\">\n               \t<p>Mensaje original: \"{{ message }}\"</p>\n  \t\t\t\t<p>Mensaje en mayusculas: \"{{ upperMessage }}\"</p>\n            </v-col>\n            <v-col cols=\"12\">\n               En este caso la variable <i>message</i> es utilizada/modificada y retornada por el computed <i>upperMessage</i>\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               computed tambien es usado para hacer filtros de arrays por ejemplo:\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               \t<p>Array original: \"{{ arrayDelMal }}\"</p>\n  \t\t\t\t<p>Array mayores que 5: \"{{ arrayDelMalFiltrado }}\"</p>\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               Para demostrar la maravilla del computed se hara un metodo que agregue al array de arriba un numero random del 0 - 10 \n            </v-col>\n\t\t\t<v-col cols=\"12\">\n\t\t\t\t<v-btn depressed color=\"red\" @click=\"agregarNumero\">\n\t\t\t\t\tAgregar\n\t\t\t\t</v-btn>\n            </v-col>\n\t\t\t-\n            <v-col cols=\"12\">\n               Otro asd interesante es el watch, que lo que hace es llamar a la watch cada vez que una variable es modificada\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n                Escribe en el input y va en la consola\n                <v-text-field\n                    v-model=\"varibleInput\"\n                    label=\"Text field\"\n                ></v-text-field>\n            </v-col>\n\t\t\t-\n\t\t\t<v-col cols=\"12\">\n               Por ultimo tenemos el filter, que lo que hace es modificar la variable con la que se encuentra es para propocitos mas generales que el computed y se usa principalmente para fines esteticos o de normalizacion (de fecha por ejemplo)\n\t\t\t   para usarse se tiene el {nombre de variable | nombre del filtro}\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               {{message | upper}}\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\n  export default {\n    name: 'ParteTres',\n\n    data: () => ({\n\t\tmessage: \"hola mundo\",\n\t\tarrayDelMal: [1,2,3,4,5,6,7,8,9],\n\t\tvaribleInput: \"\"\n    }),\n\n\tmethods: {\n\t\tagregarNumero () {\n\t\t\tthis.arrayDelMal.push(Math.floor(Math.random() * 11))\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tupperMessage () {\n\t\t\treturn this.message.toUpperCase()\n\t\t},\n\t\tarrayDelMalFiltrado () {\n\t\t\t//No olvidar que esto funciona como una \"nueva\" varible no modifica nada de lo que se llama aca, en este caso arrayDelMal seguira tal cual\n\t\t\treturn this.arrayDelMal.filter(e => {return e > 5})\n\t\t}\n\t},\n\n\twatch: {\n\t\tvaribleInput (val) {\n\t\t\tconsole.log(\"call from watch:\", val)\n\t\t}\n\t},\n\n\tfilters: {\n\t\tupper (val) {\n\t\t\treturn val.toUpperCase()\n\t\t}\n\t}\n  }\n</script>\n"],"sourceRoot":"src/components"}]}