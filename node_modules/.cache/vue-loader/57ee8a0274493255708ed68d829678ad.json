{"remainingRequest":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue?vue&type=template&id=25897ac4&","dependencies":[{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue","mtime":1637513856000},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1639667168933},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js","mtime":1639667167063}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    [\n      _c(\n        \"v-row\",\n        { staticClass: \"text-center\" },\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"p\", { staticClass: \"display-1\" }, [_vm._v(\" Tercera parte \")]),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               Aparte de methods existen otros tipo de (no se como llamarlos) muy interesantes como el computed, que basicamente se calcula cada vez que hay un cambio en una variable, ejemplo:\\n            \"\n            ),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"p\", [\n              _vm._v('Mensaje original: \"' + _vm._s(_vm.message) + '\"'),\n            ]),\n            _c(\"p\", [\n              _vm._v(\n                'Mensaje en mayusculas: \"' + _vm._s(_vm.upperMessage) + '\"'\n              ),\n            ]),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\"\\n               En este caso la variable \"),\n            _c(\"i\", [_vm._v(\"message\")]),\n            _vm._v(\" es utilizada/modificada y retornada por el computed \"),\n            _c(\"i\", [_vm._v(\"upperMessage\")]),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               computed tambien es usado para hacer filtros de arrays por ejemplo:\\n            \"\n            ),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"p\", [\n              _vm._v('Array original: \"' + _vm._s(_vm.arrayDelMal) + '\"'),\n            ]),\n            _c(\"p\", [\n              _vm._v(\n                'Array mayores que 5: \"' + _vm._s(_vm.arrayDelMalFiltrado) + '\"'\n              ),\n            ]),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               Para demostrar la maravilla del computed se hara un metodo que agregue al array de arriba un numero random del 0 - 10 \\n            \"\n            ),\n          ]),\n          _c(\n            \"v-col\",\n            { attrs: { cols: \"12\" } },\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { depressed: \"\", color: \"red\" },\n                  on: { click: _vm.agregarNumero },\n                },\n                [_vm._v(\"\\n\\t\\t\\t\\t\\tAgregar\\n\\t\\t\\t\\t\")]\n              ),\n            ],\n            1\n          ),\n          _vm._v(\"\\n\\t\\t\\t-\\n            \"),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               Otro asd interesante es el watch, que lo que hace es llamar a la watch cada vez que una variable es modificada\\n            \"\n            ),\n          ]),\n          _c(\n            \"v-col\",\n            { attrs: { cols: \"12\" } },\n            [\n              _vm._v(\n                \"\\n                Escribe en el input y va en la consola\\n                \"\n              ),\n              _c(\"v-text-field\", {\n                attrs: { label: \"Text field\" },\n                model: {\n                  value: _vm.varibleInput,\n                  callback: function ($$v) {\n                    _vm.varibleInput = $$v\n                  },\n                  expression: \"varibleInput\",\n                },\n              }),\n            ],\n            1\n          ),\n          _vm._v(\"\\n\\t\\t\\t-\\n\\t\\t\\t\"),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               Por ultimo tenemos el filter, que lo que hace es modificar la variable con la que se encuentra es para propocitos mas generales que el computed y se usa principalmente para fines esteticos o de normalizacion (de fecha por ejemplo)\\n\\t\\t\\t   para usarse se tiene el {nombre de variable | nombre del filtro}\\n            \"\n            ),\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _vm._v(\n              \"\\n               \" +\n                _vm._s(_vm._f(\"upper\")(_vm.message)) +\n                \"\\n            \"\n            ),\n          ]),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}