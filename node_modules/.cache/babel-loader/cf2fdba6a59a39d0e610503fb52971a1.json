{"remainingRequest":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vuetify\\lib\\components\\VDatePicker\\util\\createNativeLocaleFormatter.js","dependencies":[{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vuetify\\lib\\components\\VDatePicker\\util\\createNativeLocaleFormatter.js","mtime":1639667172347},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\babel.config.js","mtime":1637240904000},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\babel-loader\\lib\\index.js","mtime":1639667166196}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"C:\\\\Users\\\\ValentinaT\\\\Documents\\\\Memoria\\\\WebTheRealAndOnlyDefinitivo\\\\web-app-emociones\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport pad from \"./pad\";\n\nfunction createNativeLocaleFormatter(locale, options) {\n  var substrOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    start: 0,\n    length: 0\n  };\n\n  var makeIsoString = function makeIsoString(dateString) {\n    var _dateString$trim$spli = dateString.trim().split(' ')[0].split('-'),\n        _dateString$trim$spli2 = _slicedToArray(_dateString$trim$spli, 3),\n        year = _dateString$trim$spli2[0],\n        month = _dateString$trim$spli2[1],\n        date = _dateString$trim$spli2[2];\n\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-');\n  };\n\n  try {\n    var intlFormatter = new Intl.DateTimeFormat(locale || undefined, options);\n    return function (dateString) {\n      return intlFormatter.format(new Date(\"\".concat(makeIsoString(dateString), \"T00:00:00+00:00\")));\n    };\n  } catch (e) {\n    return substrOptions.start || substrOptions.length ? function (dateString) {\n      return makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length);\n    } : undefined;\n  }\n}\n\nexport default createNativeLocaleFormatter;",{"version":3,"sources":["../../../../src/components/VDatePicker/util/createNativeLocaleFormatter.ts"],"names":[],"mappings":";;AAAA,OAAA,GAAA;;AAmBA,SAAA,2BAAA,CAAA,MAAA,EAAA,OAAA,EAGwD;AAAA,MAAtD,aAAsD,uEAAvB;AAAE,IAAA,KAAK,EAAP,CAAA;AAAY,IAAA,MAAM,EAAE;AAApB,GAAuB;;AAEtD,MAAM,aAAa,GAAI,SAAjB,aAAiB,CAAA,UAAD,EAAuB;AAC3C,gCAA4B,UAAU,CAAV,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CAA5B,GAA4B,CAA5B;AAAA;AAAA,QAAM,IAAN;AAAA,QAAM,KAAN;AAAA,QAAM,IAAN;;AACA,WAAO,CAAC,GAAG,CAAA,IAAA,EAAJ,CAAI,CAAJ,EAAe,GAAG,CAAC,KAAK,IAAxB,CAAkB,CAAlB,EAAgC,GAAG,CAAC,IAAI,IAAxC,CAAmC,CAAnC,EAAA,IAAA,CAAP,GAAO,CAAP;AAFF,GAAA;;AAKA,MAAI;AACF,QAAM,aAAa,GAAG,IAAI,IAAI,CAAR,cAAA,CAAwB,MAAM,IAA9B,SAAA,EAAtB,OAAsB,CAAtB;AACA,WAAQ,UAAA,UAAD;AAAA,aAAwB,aAAa,CAAb,MAAA,CAAqB,IAAA,IAAA,WAAY,aAAa,CAA7E,UAA6E,CAAzB,qBAArB,CAAxB;AAAA,KAAP;AAFF,GAAA,CAGE,OAAA,CAAA,EAAU;AACV,WAAQ,aAAa,CAAb,KAAA,IAAuB,aAAa,CAArC,MAAC,GACH,UAAA,UAAD;AAAA,aAAwB,aAAa,CAAb,UAAa,CAAb,CAAA,MAAA,CAAiC,aAAa,CAAb,KAAA,IAAjC,CAAA,EAA2D,aAAa,CAD7F,MACqB,CAAxB;AAAA,KADI,GAAR,SAAA;AAGD;AACF;;AAED,eAAA,2BAAA","sourcesContent":["import pad from './pad'\nimport { DatePickerFormatter } from 'vuetify/types'\n\ninterface SubstrOptions {\n  start?: number\n  length: number\n}\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions\n): DatePickerFormatter | undefined\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions\n): DatePickerFormatter\n\nfunction createNativeLocaleFormatter (\n  locale: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions = { start: 0, length: 0 }\n): DatePickerFormatter | undefined {\n  const makeIsoString = (dateString: string) => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-')\n  }\n\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\n    return (dateString: string) => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\n  } catch (e) {\n    return (substrOptions.start || substrOptions.length)\n      ? (dateString: string) => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length)\n      : undefined\n  }\n}\n\nexport default createNativeLocaleFormatter\n"],"sourceRoot":""}]}