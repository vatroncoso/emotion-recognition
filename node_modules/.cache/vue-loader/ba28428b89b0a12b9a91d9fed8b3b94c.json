{"remainingRequest":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue?vue&type=template&id=25897ac4&","dependencies":[{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\src\\components\\ParteTres.vue","mtime":1637513856000},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1639667168933},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639667165578},{"path":"C:\\Users\\ValentinaT\\Documents\\Memoria\\WebTheRealAndOnlyDefinitivo\\web-app-emociones\\node_modules\\vue-loader\\lib\\index.js","mtime":1639667167063}],"contextDependencies":[],"result":["\n    <v-container>\n        <v-row class=\"text-center\">\n            <v-col cols=\"12\">\n               <p class=\"display-1\"> Tercera parte </p>\n            </v-col>\n            <v-col cols=\"12\">\n               Aparte de methods existen otros tipo de (no se como llamarlos) muy interesantes como el computed, que basicamente se calcula cada vez que hay un cambio en una variable, ejemplo:\n            </v-col>\n            <v-col cols=\"12\">\n               \t<p>Mensaje original: \"{{ message }}\"</p>\n  \t\t\t\t<p>Mensaje en mayusculas: \"{{ upperMessage }}\"</p>\n            </v-col>\n            <v-col cols=\"12\">\n               En este caso la variable <i>message</i> es utilizada/modificada y retornada por el computed <i>upperMessage</i>\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               computed tambien es usado para hacer filtros de arrays por ejemplo:\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               \t<p>Array original: \"{{ arrayDelMal }}\"</p>\n  \t\t\t\t<p>Array mayores que 5: \"{{ arrayDelMalFiltrado }}\"</p>\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               Para demostrar la maravilla del computed se hara un metodo que agregue al array de arriba un numero random del 0 - 10 \n            </v-col>\n\t\t\t<v-col cols=\"12\">\n\t\t\t\t<v-btn depressed color=\"red\" @click=\"agregarNumero\">\n\t\t\t\t\tAgregar\n\t\t\t\t</v-btn>\n            </v-col>\n\t\t\t-\n            <v-col cols=\"12\">\n               Otro asd interesante es el watch, que lo que hace es llamar a la watch cada vez que una variable es modificada\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n                Escribe en el input y va en la consola\n                <v-text-field\n                    v-model=\"varibleInput\"\n                    label=\"Text field\"\n                ></v-text-field>\n            </v-col>\n\t\t\t-\n\t\t\t<v-col cols=\"12\">\n               Por ultimo tenemos el filter, que lo que hace es modificar la variable con la que se encuentra es para propocitos mas generales que el computed y se usa principalmente para fines esteticos o de normalizacion (de fecha por ejemplo)\n\t\t\t   para usarse se tiene el {nombre de variable | nombre del filtro}\n            </v-col>\n\t\t\t<v-col cols=\"12\">\n               {{message | upper}}\n            </v-col>\n        </v-row>\n    </v-container>\n",null]}